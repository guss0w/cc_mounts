{"version":3,"sources":["App.js","index.js"],"names":["App","useState","table","setTable","console","log","mountlist","get","characterId","a","request","axios","character","data","Character","Avatar","ID","Name","Mounts","formatted","getAll","Promise","all","Object","keys","charactermap","map","k","characters","useEffect","className","mount","char","src","length","ReactDOM","render","document","getElementById"],"mappings":"+eA2EeA,MAlEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAKC,GACb,IAAMC,EAAG,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACS,mEACbC,EAFI,uCAEsCF,EAFtC,kCACS,oEADT,SAIcG,IAAMJ,IAAIG,GAJxB,cAIJE,EAJI,SAKSA,EAAUC,MAASD,EAAUC,KAAKC,YACnDF,EAAUC,KAAKC,UAAY,CACzBC,OAAQ,GACRC,GAAI,EACJC,KAAM,KAGLL,GAAcA,EAAUC,MAASD,EAAUC,KAAKK,SACnDN,EAAUC,KAAKK,OAAS,IAEpBC,EAAY,CAChBJ,OAAQH,EAAUC,KAAKC,UAAUC,OACjCE,KAAML,EAAUC,KAAKC,UAAUG,KAC/BD,GAAIJ,EAAUC,KAAKC,UAAUE,GAC7BE,OAAQN,EAAUC,KAAKK,QAnBf,kBAqBHC,GArBG,2CAAH,sDAuBHC,EAAM,uCAAG,4BAAAX,EAAA,sEACYY,QAAQC,IAAIC,OAAOC,KAAKC,GAAcC,KAAI,SAAAC,GAAC,OAAIpB,EAAIkB,EAAaE,QAD5E,OACPC,EADO,OAEbzB,EAASyB,GAFI,2CAAH,qDAUZ,OAJAC,qBAAU,WACRT,MACC,IAGD,sBAAKU,UAAU,MAAf,UACE,wBAAQA,UAAU,eAElB,8BACE,kCACE,gCACG,+BACA,uBACGP,OAAOC,KAAKlB,GAAWoB,KAAI,SAAAK,GAAK,OAC/B,6BACGzB,EAAUyB,IADJA,WAMhB,kCACG7B,EAAMwB,KAAI,SAAAM,GAAI,OACb,6BACE,+BAAI,qBAAKF,UAAU,SAASG,IAAKD,EAAKjB,SAAUiB,EAAKf,SAD9Ce,EAAKhB,OAIE,IAAjBd,EAAMgC,OAAe,4CAAsB,eC9DxDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.b484723b.chunk.js","sourcesContent":["// Libraries\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\n// Style\nimport './App.css'\n// Data\nimport charactermap from './data/character.map.json'\nimport mountlist from './data/mounts.map.json'\n\nfunction App() {\n  const [table, setTable] = useState([])\n  console.log( mountlist )\n  const get = async (characterId) => {\n    const privateKey = \"cd40cec1f7294f50a2f480e731e6de97daa78b41ccb543159943caefb5698be6\"\n    const request = `https://xivapi.com/character/${characterId}?data=MIMO&private_key=${privateKey}`\n\n    const character = await axios.get(request)\n    if (!character || !character.data || !character.data.Character) {\n      character.data.Character = {\n        Avatar: '',\n        ID: 0,\n        Name: ''\n      }\n    }\n    if (!character || !character.data || !character.data.Mounts) {\n      character.data.Mounts = []\n    }\n    const formatted = {\n      Avatar: character.data.Character.Avatar,\n      Name: character.data.Character.Name,\n      ID: character.data.Character.ID,\n      Mounts: character.data.Mounts\n    }\n    return formatted\n  }\n  const getAll = async () => {\n    const characters = await Promise.all(Object.keys(charactermap).map(k => get(charactermap[k])))\n    setTable(characters)\n  }\n  \n  // Only run our api request on first load\n  useEffect(() => {\n    getAll()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div>\n        <table>\n          <thead>\n             <tr>\n             <td/>\n               {Object.keys(mountlist).map(mount => (\n                 <td key={mount}>\n                   {mountlist[mount]}\n                 </td>\n               ))}\n             </tr>\n          </thead>\n          <tbody>\n            {table.map(char => (\n              <tr key={char.ID}>\n                <td><img className=\"avatar\" src={char.Avatar}/>{char.Name}</td>\n              </tr>\n            ))}\n            {table.length === 0 ? <tr>Loading...</tr> : ''}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}